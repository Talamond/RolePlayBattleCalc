var gulp = require('gulp');
var fs = require('fs');
var foreach = require('gulp-foreach');
var punycode = require('punycode');

gulp.task('genIconJs', function () {
	gulp.src('src/styles/fonts/icons/styles.css')
		.pipe(foreach(function(a,b,c,d,e) {
			fs.readFile('src/styles/fonts/icons/styles.css', 'utf8', function(err, data) {
				var icons = data.split('.icon-');
				var jsIcons = {};

				for (var i = 1; i < icons.length; i++) { //first val is not an icon
					var iconLine = icons[i].split(':');
					var content = iconLine[2].split("\"");
					var iName = iconLine[0];
					var iChar = content.length === 4 ? '\"' : content[1].replace('\\', '0x');

					jsIcons[iName] = punycode.ucs2.encode([iChar]);
				}

				var start = '/*eslint-disable*/ /* This file is generated by "gulp genIconJs" */ export const Icons = ';

				fs.writeFile('src/generated/iconsMap.js', start + JSON.stringify(jsIcons) + ';', function (err) {
					if (err) {
						console.log(err);
					} else {
						console.log('Finished writing file.');
					}
				});
			});

		}));
});
